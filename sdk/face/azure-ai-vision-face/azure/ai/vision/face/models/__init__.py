# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from ._models import AddFaceResult
from ._models import CreatePersonResult
from ._models import DynamicPersonGroup
from ._models import FaceCollectionTrainingStatus
from ._models import FaceError
from ._models import FaceErrorResponse
from ._models import FaceFindSimilarResult
from ._models import FaceGroupingResult
from ._models import FaceIdentificationCandidate
from ._models import FaceIdentificationResult
from ._models import FaceList
from ._models import FaceListFace
from ._models import FaceListItem
from ._models import FaceOperationStatus
from ._models import FaceRectangle
from ._models import FaceVerificationResult
from ._models import LargeFaceList
from ._models import LargeFaceListFace
from ._models import LargePersonGroup
from ._models import LargePersonGroupPerson
from ._models import LargePersonGroupPersonFace
from ._models import ListFaceResult
from ._models import ListGroupReferenceResult
from ._models import ListPersonResult
from ._models import LivenessOutputsTarget
from ._models import LivenessResponseBody
from ._models import LivenessSession
from ._models import LivenessSessionAuditEntry
from ._models import LivenessSessionCreationContent
from ._models import LivenessSessionCreationContentForMultipart
from ._models import LivenessSessionCreationResult
from ._models import LivenessSessionItem
from ._models import LivenessSessionWithVerifyImageCreationContent
from ._models import LivenessWithVerifyImage
from ._models import LivenessWithVerifyOutputs
from ._models import LivenessWithVerifySession
from ._models import PersonDirectoryFace
from ._models import PersonDirectoryPerson
from ._models import PersonGroup
from ._models import PersonGroupPerson
from ._models import PersonGroupPersonFace
from ._models import SessionAuditEntryRequestInfo
from ._models import SessionAuditEntryResponseInfo

from ._enums import FaceDetectionModel
from ._enums import FaceAttributeType
from ._enums import FaceImageType
from ._enums import FaceLivenessDecision
from ._enums import FaceOperationState
from ._enums import FaceRecognitionModel
from ._enums import FaceSessionStatus
from ._enums import FindSimilarMatchMode
from ._enums import LivenessModel
from ._enums import LivenessOperationMode
from ._enums import QualityForRecognition
from ._enums import Versions
from ._patch import __all__ as _patch_all
from ._patch import *  # pylint: disable=unused-wildcard-import
from ._patch import patch_sdk as _patch_sdk

__all__ = [
    "AddFaceResult",
    "CreatePersonResult",
    "DynamicPersonGroup",
    "FaceCollectionTrainingStatus",
    "FaceError",
    "FaceErrorResponse",
    "FaceFindSimilarResult",
    "FaceGroupingResult",
    "FaceIdentificationCandidate",
    "FaceIdentificationResult",
    "FaceList",
    "FaceListFace",
    "FaceListItem",
    "FaceOperationStatus",
    "FaceRectangle",
    "FaceVerificationResult",
    "LargeFaceList",
    "LargeFaceListFace",
    "LargePersonGroup",
    "LargePersonGroupPerson",
    "LargePersonGroupPersonFace",
    "ListFaceResult",
    "ListGroupReferenceResult",
    "ListPersonResult",
    "LivenessOutputsTarget",
    "LivenessResponseBody",
    "LivenessSession",
    "LivenessSessionAuditEntry",
    "LivenessSessionCreationContent",
    "LivenessSessionCreationContentForMultipart",
    "LivenessSessionCreationResult",
    "LivenessSessionItem",
    "LivenessSessionWithVerifyImageCreationContent",
    "LivenessWithVerifyImage",
    "LivenessWithVerifyOutputs",
    "LivenessWithVerifySession",
    "PersonDirectoryFace",
    "PersonDirectoryPerson",
    "PersonGroup",
    "PersonGroupPerson",
    "PersonGroupPersonFace",
    "SessionAuditEntryRequestInfo",
    "SessionAuditEntryResponseInfo",
    "FaceDetectionModel",
    "FaceAttributeType",
    "FaceImageType",
    "FaceLivenessDecision",
    "FaceOperationState",
    "FaceRecognitionModel",
    "FaceSessionStatus",
    "FindSimilarMatchMode",
    "LivenessModel",
    "LivenessOperationMode",
    "QualityForRecognition",
    "Versions",
]
__all__.extend([p for p in _patch_all if p not in __all__])
_patch_sdk()
