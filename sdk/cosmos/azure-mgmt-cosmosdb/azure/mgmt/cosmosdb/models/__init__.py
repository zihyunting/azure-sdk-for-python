# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from ._models_py3 import ErrorResponse
from ._models_py3 import NetworkSecurityPerimeter
from ._models_py3 import NetworkSecurityPerimeterConfiguration
from ._models_py3 import NetworkSecurityPerimeterConfigurationList
from ._models_py3 import NetworkSecurityPerimeterConfigurationPropertiesProfile
from ._models_py3 import NetworkSecurityPerimeterConfigurationPropertiesResourceAssociation
from ._models_py3 import NspAccessRule
from ._models_py3 import NspAccessRuleProperties
from ._models_py3 import NspAccessRulePropertiesSubscriptionsItem
from ._models_py3 import ProvisioningIssue
from ._models_py3 import ProvisioningIssueProperties
from ._models_py3 import ProxyResource
from ._models_py3 import Resource
from ._models_py3 import SystemData

from ._cosmos_db_management_client_enums import CreatedByType
from ._cosmos_db_management_client_enums import IssueType
from ._cosmos_db_management_client_enums import NetworkSecurityPerimeterConfigurationProvisioningState
from ._cosmos_db_management_client_enums import NspAccessRuleDirection
from ._cosmos_db_management_client_enums import ResourceAssociationAccessMode
from ._cosmos_db_management_client_enums import Severity
from ._patch import __all__ as _patch_all
from ._patch import *  # pylint: disable=unused-wildcard-import
from ._patch import patch_sdk as _patch_sdk

__all__ = [
    "ErrorResponse",
    "NetworkSecurityPerimeter",
    "NetworkSecurityPerimeterConfiguration",
    "NetworkSecurityPerimeterConfigurationList",
    "NetworkSecurityPerimeterConfigurationPropertiesProfile",
    "NetworkSecurityPerimeterConfigurationPropertiesResourceAssociation",
    "NspAccessRule",
    "NspAccessRuleProperties",
    "NspAccessRulePropertiesSubscriptionsItem",
    "ProvisioningIssue",
    "ProvisioningIssueProperties",
    "ProxyResource",
    "Resource",
    "SystemData",
    "CreatedByType",
    "IssueType",
    "NetworkSecurityPerimeterConfigurationProvisioningState",
    "NspAccessRuleDirection",
    "ResourceAssociationAccessMode",
    "Severity",
]
__all__.extend([p for p in _patch_all if p not in __all__])
_patch_sdk()
