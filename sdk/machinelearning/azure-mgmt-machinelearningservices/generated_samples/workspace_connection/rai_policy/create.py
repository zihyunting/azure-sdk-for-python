# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from typing import Any, IO, Union

from azure.identity import DefaultAzureCredential

from azure.mgmt.machinelearningservices import MachineLearningServicesMgmtClient

"""
# PREREQUISITES
    pip install azure-identity
    pip install azure-mgmt-machinelearningservices
# USAGE
    python create.py

    Before run the sample, please set the values of the client ID, tenant ID and client secret
    of the AAD application as environment variables: AZURE_CLIENT_ID, AZURE_TENANT_ID,
    AZURE_CLIENT_SECRET. For more info about how to get the value, please see:
    https://docs.microsoft.com/azure/active-directory/develop/howto-create-service-principal-portal
"""


def main():
    client = MachineLearningServicesMgmtClient(
        credential=DefaultAzureCredential(),
        subscription_id="00000000-1111-2222-3333-444444444444",
    )

    response = client.connection_rai_policy.begin_create(
        resource_group_name="test-rg",
        workspace_name="aml-workspace-name",
        connection_name="testConnection",
        rai_policy_name="raiPolicyName",
        body={
            "properties": {
                "basePolicyName": "112",
                "completionBlocklists": [{"blocking": False, "blocklistName": "blocklistName"}],
                "contentFilters": [
                    {
                        "allowedContentLevel": "Low",
                        "blocking": False,
                        "enabled": False,
                        "name": "policyName",
                        "source": "Prompt",
                    }
                ],
                "mode": "Blocking",
                "promptBlocklists": [{"blocking": False, "blocklistName": "blocklistName"}],
                "type": "SystemManaged",
            }
        },
    ).result()
    print(response)


# x-ms-original-file: specification/machinelearningservices/resource-manager/Microsoft.MachineLearningServices/stable/2024-04-01/examples/WorkspaceConnection/RaiPolicy/create.json
if __name__ == "__main__":
    main()
